/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a public read policy for claims, allowing any user to view claim data, while restricting write access to only authenticated users. Patient data is also readable by anyone.
 *
 * Data Structure:
 * - /claims/{claimId}: Stores individual claim records.
 * - /patients/{patientId}: Stores individual patient records.
 *
 * Key Security Decisions:
 * - All patient and claims data is private and only readable to authenticated users with pharmacy location = pharmacy of service from the database and to role level = admin.
 * - Only authenticated users can create or claims.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows only authenticated to read or write patient and claims data with check user's pharmacy location = pharmacy of service for patient reocrd.
     * @path /claims/{claimId}
     * @allow (get, list): An authenticated user can read claims and patient data with check user pharmacy location = pharmacy of service.
     * @allow (create): An authenticated user can create claims and patient data with check user pharmacy location = pharmacy of service.
     * @allow (update, delete): An authenticated user can update claims and patient data with check user pharmacy location = pharmacy of service.
     * @deny (update, delete): An unauthenticated user cannot delete a claim.
     * @principle The data is protected health information and only authenticated users with pharmacy location = pharmacy of service and users with role = admin  can access data.
     */
    match /claims/{claimId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
    }

    /**
     * @description Allows anyone to read patient data, but write operations are forbidden.
     * @path /patients/{patientId}
     * @allow (get, list): Any user can read patient data.
     * @deny (create, update, delete): No one can create, update, or delete patient data.
     * @principle Enforces read-only access to patient data.
     */
    match /patients/{patientId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Checks if the user is signed in.
     */
    function isSignedIn() {
      return request.auth != null;
    }
  }
}